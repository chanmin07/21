3번
int[] math = { 1, 2, 3, 4, 5 } ;
		int[] newMath = new int[5];
		
		for(int i=0;i<math.length;i++){
			if(i == 0)
				System.out.printf("Math 데이터 : ");
			System.out.printf("%d ", math[i]);
		}
		System.out.println("math의 주소 : " + math);
		
		for(int i=0;i<newMath.length;i++){
			if(i == 0)
				System.out.printf("newMath 데이터 : ");
			System.out.printf("%d ", newMath[i]);
		}
		System.out.println("newMath의 주소 : " + newMath);
		
		newMath = math;
		System.out.println("얕은 복사 결과");
		
		for(int i=0;i<math.length;i++){
			if(i == 0)
				System.out.printf("Math 데이터 : ");
			System.out.printf("%d ", math[i]);
		}
		System.out.println("math의 주소 : " + math);
		
		for(int i=0;i<newMath.length;i++){
			if(i == 0)
				System.out.printf("newMath 데이터 : ");
			System.out.printf("%d ", newMath[i]);
		}
		System.out.println("newMath의 주소 : " + newMath);

4번
int[] math = { 1, 2, 3, 4, 5 } ;
		int[] newMath = new int[5];
		
		System.out.println("math의 주소 : " + math);
		System.out.println("newMath의 주소 : " + newMath);
		
		for(int i=0;i<math.length;i++)
			newMath[i]=math[i];
		
		for(int i=0;i<newMath.length;i++){
			if(i == 0)
				System.out.printf("newMath 데이터 : ");
			System.out.printf("%d ", newMath[i]);
		}
		System.out.println();
		
		int[] mathClone = math.clone();
		System.out.println("mathClone의 주소 : " + mathClone);
		
		for(int i=0;i<mathClone.length;i++){
			if(i == 0)
				System.out.printf("mathClone 데이터 : ");
			System.out.printf("%d ", mathClone[i]);
		}
		System.out.println();
		
		for(int i=0;i<newMath.length;i++) // newMath 0으로 값 변경
			newMath[i]=0;
		
		System.arraycopy(math, 2, newMath, 0, 2); // 원본 배열, 시작 인덱스, 복사할 배열, 시작 인덱스, 개수
		
		for(int i=0;i<newMath.length;i++){
			if(i == 0)
				System.out.printf("newMath 데이터 : ");
			System.out.printf("%d ", newMath[i]);
		}
		System.out.println();

5번
String[] name = new String[4];
		name[0] = "Kim"; name[1] = "Lee"; name[2] = "Park"; name[3] = "Choi";
		
		// String 클래스
		String str = "Hello";
		String str2 = "Hello";
		String str3 = new String("Hello");
		String str4 = new String("Hello");
		
		System.out.println(str == "Hello");
		System.out.println(str2 == "Hello");
		System.out.println(str == str2);
		System.out.println("----------------------");
		System.out.println(str3 == "Hello");
		System.out.println(str4 == "Hello");
		System.out.println(str3 == str4);
		System.out.println("----------------------");
		System.out.println(str.equals(str3));
		System.out.println(str3.equals(str4));
		System.out.println("----------------------");		
		str = str + name[0];
		System.out.println(str == str2);
		System.out.println("----------------------");
		System.out.println(str.charAt(0)); // 문자열에서 해당 위치에 있는 문자를 반환
		System.out.println(str.length()); // 문자열의 길이를 반환
		System.out.println(str.substring(1,3)); // 문자열의 길이를 반환

		char[] chArray = str.toCharArray(); // 문자

6번
// StringBuffer 클래스
		
		StringBuffer sb = new StringBuffer("ABC"); // 문자열과 함께 생성 -> 버퍼 사이즈 19
		//StringBuffer sb = new StringBuffer(); // 기본 생성 -> 버퍼 사이즈 16
		//StringBuffer sb = new StringBuffer(30); // 문자열 버퍼 30 사이즈로 생성
		
		System.out.println(sb);
		sb.append(123); // String과 달리 내용 추가 가능. 내용 추가용 메서드. 
		System.out.println(sb);
		System.out.println("----------------------");
		System.out.println("sb  : " + sb.append(456).append(789));
		StringBuffer sb2 = new StringBuffer("ABC123456789");
		System.out.println("sb2 : " + sb2);

		System.out.println(sb.equals(sb2)); // equals를 사용해서 비교 불가능
		System.out.println(sb.toString().equals(sb2.toString())); 
		System.out.println("----------------------");

		System.out.printf("sb capacity = %d, length = %d\n", sb.capacity(), sb.length());
		System.out.println(sb.delete(3, sb.length()).toString());
		System.out.println(sb.deleteCharAt(2));
		System.out.println("----------------------");
		
		// StringBuffer 를 사용해서 아래와 같이 출력하시오.
		// 시작 문자열 : "Advanced Programming"

과제
1. 1차원 배열의 초기화를 1~10까지 숫자로 한 후, 그 안에 들어있는 값을 역순으로 바꾸는 프로그램을 작성하시오.﻿

﻿

2. 2차원 배열과 중첩 for 문을 사용해서 2단부터 9단까지 구구단을 저장하는 프로그램을 작성하시오.

﻿

3. ﻿String 클래스 str의 내용을 "Working", StringBuffer 클래스 sb 내용을 "Break Time" 를 각각 생성한다. 

    sb 의 값을 str의 값과 동일하게 변경한 뒤, ﻿ 두 값을 비교해 동일한 것으로 판단한 결과를 출력하시오.﻿

    ﻿실행 결과는 아래와 같다.﻿

    str와 sb는 같은 문자열입니다.

